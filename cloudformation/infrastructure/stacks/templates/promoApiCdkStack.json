{
  "Resources": {
    "DynamoDBTable59784FC0": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "channel",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "channel",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "musa-test-lambda-promos-table"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "LambdaExecutionRoleD5C26073": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "lambda-apigateway-role"
      }
    },
    "LambdaExecutionRoleDefaultPolicy6D69732F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:UpdateItem"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DynamoDBTable59784FC0",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaExecutionRoleDefaultPolicy6D69732F",
        "Roles": [
          {
            "Ref": "LambdaExecutionRoleD5C26073"
          }
        ]
      }
    },
    "CreateUserLambda0154A2EB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "8d7b46775f4045c434804fcb4bed99ba1ab3540e82defb29760bbf2928c86303.zip"
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": "musa-test-lambda-promos-table"
          }
        },
        "FunctionName": "LambdaFunctionCreateUser",
        "Handler": "createUser.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRoleD5C26073",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x"
      },
      "DependsOn": [
        "LambdaExecutionRoleDefaultPolicy6D69732F",
        "LambdaExecutionRoleD5C26073"
      ]
    },
    "GetUsersLambda4ACBBAFD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "8d7b46775f4045c434804fcb4bed99ba1ab3540e82defb29760bbf2928c86303.zip"
        },
        "Environment": {
          "Variables": {
            "TABLE_NAME": "musa-test-lambda-promos-table"
          }
        },
        "FunctionName": "LambdaFunctionGetUsers",
        "Handler": "getUsers.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRoleD5C26073",
            "Arn"
          ]
        },
        "Runtime": "nodejs20.x"
      },
      "DependsOn": [
        "LambdaExecutionRoleDefaultPolicy6D69732F",
        "LambdaExecutionRoleD5C26073"
      ]
    },
    "ApiGateway11E7F47B": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        },
        "Name": "MockTVPromotionAPI"
      }
    },
    "ApiGatewayDeploymentA26796E8eedaa35a6e8ed8c8550090016270a423": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B"
        }
      },
      "DependsOn": [
        "ApiGatewayOPTIONSFAD6DF6F",
        "ApiGatewayuserOPTIONS90D30FA1",
        "ApiGatewayuserPOST5AB86744",
        "ApiGatewayuserC9FF3954",
        "ApiGatewayusersGETCA34947C",
        "ApiGatewayusersOPTIONS5AD384E9",
        "ApiGatewayusersD0540194"
      ]
    },
    "ApiGatewayDeploymentStageprod1C6D5CD6": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiGatewayDeploymentA26796E8eedaa35a6e8ed8c8550090016270a423"
        },
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B"
        },
        "StageName": "prod"
      }
    },
    "ApiGatewayOPTIONSFAD6DF6F": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGateway11E7F47B",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B"
        }
      }
    },
    "ApiGatewayuserC9FF3954": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGateway11E7F47B",
            "RootResourceId"
          ]
        },
        "PathPart": "user",
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B"
        }
      }
    },
    "ApiGatewayuserOPTIONS90D30FA1": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "ApiGatewayuserC9FF3954"
        },
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B"
        }
      }
    },
    "ApiGatewayuserPOSTApiPermissionpromoApiCdkStackApiGatewayE78F108APOSTuser4CD6FAFA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateUserLambda0154A2EB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGateway11E7F47B"
              },
              "/",
              {
                "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
              },
              "/POST/user"
            ]
          ]
        }
      }
    },
    "ApiGatewayuserPOSTApiPermissionTestpromoApiCdkStackApiGatewayE78F108APOSTuser07B1B8A9": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateUserLambda0154A2EB",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGateway11E7F47B"
              },
              "/test-invoke-stage/POST/user"
            ]
          ]
        }
      }
    },
    "ApiGatewayuserPOST5AB86744": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateUserLambda0154A2EB",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "200"
          }
        ],
        "ResourceId": {
          "Ref": "ApiGatewayuserC9FF3954"
        },
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B"
        }
      }
    },
    "ApiGatewayusersD0540194": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGateway11E7F47B",
            "RootResourceId"
          ]
        },
        "PathPart": "users",
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B"
        }
      }
    },
    "ApiGatewayusersOPTIONS5AD384E9": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'http://localhost:5173'",
                "method.response.header.Vary": "'Origin'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'"
              },
              "StatusCode": "204"
            }
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "204"
          }
        ],
        "ResourceId": {
          "Ref": "ApiGatewayusersD0540194"
        },
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B"
        }
      }
    },
    "ApiGatewayusersGETApiPermissionpromoApiCdkStackApiGatewayE78F108AGETusersFEEBEC27": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUsersLambda4ACBBAFD",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGateway11E7F47B"
              },
              "/",
              {
                "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
              },
              "/GET/users"
            ]
          ]
        }
      }
    },
    "ApiGatewayusersGETApiPermissionTestpromoApiCdkStackApiGatewayE78F108AGETusers20755AAC": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUsersLambda4ACBBAFD",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGateway11E7F47B"
              },
              "/test-invoke-stage/GET/users"
            ]
          ]
        }
      }
    },
    "ApiGatewayusersGETCA34947C": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetUsersLambda4ACBBAFD",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "StatusCode": "200"
          }
        ],
        "ResourceId": {
          "Ref": "ApiGatewayusersD0540194"
        },
        "RestApiId": {
          "Ref": "ApiGateway11E7F47B"
        }
      }
    }
  },
  "Outputs": {
    "ApiGatewayEndpoint5AA8EC3A": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGateway11E7F47B"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "ApiGatewayDeploymentStageprod1C6D5CD6"
            },
            "/"
          ]
        ]
      }
    },
    "ApiEndpoint": {
      "Description": "Endpoint URL of the deployed API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGateway11E7F47B"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com/prod/users"
          ]
        ]
      }
    }
  },
  "Parameters": {}
}